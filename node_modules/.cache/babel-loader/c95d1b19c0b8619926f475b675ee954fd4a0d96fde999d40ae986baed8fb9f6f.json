{"ast":null,"code":"var _jsxFileName = \"/Users/rosevandergiessen/code/Rosevandergiessen/react-typescript-rolodex/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\n//import logo from './logo.svg';\n//import {Component} from 'react;\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\nimport './App.css';\nimport { getData } from './utils/data.utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [searchField, setSearchField] = useState(''); // [value, setValue]\n  const [monsters, setMonsters] = useState([]);\n  const [filteredMonsters, setFilteredMonsters] = useState(monsters);\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const users = await getData('https://jsonplaceholder.typicode.com/users');\n      setMonsters(users);\n    };\n    fetchUsers();\n  }, []); //dependencies: in array what changes in order for the fuction to get run (in this case, never, only gets called on mount)\n\n  useEffect(() => {\n    const newFilteredMonsters = monsters.filter(monster => {\n      return monster.name.toLocaleLowerCase().includes(searchField);\n    });\n    setFilteredMonsters(newFilteredMonsters);\n  }, [monsters, searchField]);\n  const onSearchChange = event => {\n    const searchFieldString = event.target.value.toLocaleLowerCase();\n    setSearchField(searchFieldString);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"Our Team\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      className: \"monsters-search-box\",\n      onChangeHandler: onSearchChange,\n      placeholder: \"Search monsters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      monsters: filteredMonsters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n// class App extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       monsters: [],\n//       searchField: ''\n//     }\n//   }\n\n// componentDidMount() {\n//   fetch('https://jsonplaceholder.typicode.com/users')\n//     .then((response) => response.json())\n//     .then((users) => this.setState( () => {\n//       return {monsters: users}\n//     }\n//     ));\n// }\n\n//\n//   }\n\n//   render() {\n//     const { monsters, searchField } = this.state;\n//     const { onSearchChange } = this;\n\n//     const filteredMonsters = monsters.filter((monster) => {\n//       return monster.name.toLocaleLowerCase().includes(searchField);\n//     });\n\n//     return (\n//       <div className=\"App\">\n//       <h1 className=\"app-title\">Monster Rolodex</h1>\n//       <SearchBox\n//         className='monsters-search-box'\n//         onChangeHandler={onSearchChange}\n//         placeholder='Search monsters'\n//       />\n//       <CardList monsters={filteredMonsters}  />\n//       </div>\n//     );\n//   }\n// }\n_s(App, \"YjM+qWSyF3I2IMx5PoA1UagYOq0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","CardList","SearchBox","getData","App","searchField","setSearchField","monsters","setMonsters","filteredMonsters","setFilteredMonsters","fetchUsers","users","newFilteredMonsters","filter","monster","name","toLocaleLowerCase","includes","onSearchChange","event","searchFieldString","target","value"],"sources":["/Users/rosevandergiessen/code/Rosevandergiessen/react-typescript-rolodex/src/App.tsx"],"sourcesContent":["import { useState, useEffect, ChangeEvent } from 'react';\n//import logo from './logo.svg';\n//import {Component} from 'react;\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\nimport './App.css';\n\nimport { getData } from './utils/data.utils';\n\nexport type Employee = {\n  id: string;\n  name: string;\n  email: string;\n}\n\nconst App = () => {\n  const [searchField, setSearchField] = useState(''); // [value, setValue]\n  const [monsters, setMonsters] = useState<Employee[]>([]);\n  const [filteredMonsters, setFilteredMonsters] = useState(monsters);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const users = await getData<Monster[]>('https://jsonplaceholder.typicode.com/users');\n      setMonsters(users);\n    };\n\n    fetchUsers();\n  }, []) //dependencies: in array what changes in order for the fuction to get run (in this case, never, only gets called on mount)\n\n  useEffect(() => {\n    const newFilteredMonsters = monsters.filter((monster) => {\n      return monster.name.toLocaleLowerCase().includes(searchField);\n    });\n\n    setFilteredMonsters(newFilteredMonsters);\n  }, [monsters, searchField])\n\n  const onSearchChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    const searchFieldString = event.target.value.toLocaleLowerCase();\n    setSearchField(searchFieldString);\n  };\n\n  return(\n    <div className=\"App\">\n    <h1 className=\"app-title\">Our Team</h1>\n    <SearchBox\n      className='monsters-search-box'\n      onChangeHandler={onSearchChange}\n      placeholder='Search monsters'\n    />\n    <CardList monsters={filteredMonsters}  />\n    </div>\n  )\n};\n\n// class App extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       monsters: [],\n//       searchField: ''\n//     }\n//   }\n\n  // componentDidMount() {\n  //   fetch('https://jsonplaceholder.typicode.com/users')\n  //     .then((response) => response.json())\n  //     .then((users) => this.setState( () => {\n  //       return {monsters: users}\n  //     }\n  //     ));\n  // }\n\n//\n//   }\n\n//   render() {\n//     const { monsters, searchField } = this.state;\n//     const { onSearchChange } = this;\n\n//     const filteredMonsters = monsters.filter((monster) => {\n//       return monster.name.toLocaleLowerCase().includes(searchField);\n//     });\n\n//     return (\n//       <div className=\"App\">\n//       <h1 className=\"app-title\">Monster Rolodex</h1>\n//       <SearchBox\n//         className='monsters-search-box'\n//         onChangeHandler={onSearchChange}\n//         placeholder='Search monsters'\n//       />\n//       <CardList monsters={filteredMonsters}  />\n//       </div>\n//     );\n//   }\n// }\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAqB,OAAO;AACxD;AACA;AACA,OAAOC,QAAQ,MAAM,4CAA4C;AACjE,OAAOC,SAAS,MAAM,8CAA8C;AACpE,OAAO,WAAW;AAElB,SAASC,OAAO,QAAQ,oBAAoB;AAAC;AAQ7C,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACpD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAa,EAAE,CAAC;EACxD,MAAM,CAACU,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAACQ,QAAQ,CAAC;EAElEP,SAAS,CAAC,MAAM;IACd,MAAMW,UAAU,GAAG,YAAY;MAC7B,MAAMC,KAAK,GAAG,MAAMT,OAAO,CAAY,4CAA4C,CAAC;MACpFK,WAAW,CAACI,KAAK,CAAC;IACpB,CAAC;IAEDD,UAAU,EAAE;EACd,CAAC,EAAE,EAAE,CAAC,EAAC;;EAEPX,SAAS,CAAC,MAAM;IACd,MAAMa,mBAAmB,GAAGN,QAAQ,CAACO,MAAM,CAAEC,OAAO,IAAK;MACvD,OAAOA,OAAO,CAACC,IAAI,CAACC,iBAAiB,EAAE,CAACC,QAAQ,CAACb,WAAW,CAAC;IAC/D,CAAC,CAAC;IAEFK,mBAAmB,CAACG,mBAAmB,CAAC;EAC1C,CAAC,EAAE,CAACN,QAAQ,EAAEF,WAAW,CAAC,CAAC;EAE3B,MAAMc,cAAc,GAAIC,KAAoC,IAAW;IACrE,MAAMC,iBAAiB,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAACN,iBAAiB,EAAE;IAChEX,cAAc,CAACe,iBAAiB,CAAC;EACnC,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBACpB;MAAI,SAAS,EAAC,WAAW;MAAA,UAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAK,eACvC,QAAC,SAAS;MACR,SAAS,EAAC,qBAAqB;MAC/B,eAAe,EAAEF,cAAe;MAChC,WAAW,EAAC;IAAiB;MAAA;MAAA;MAAA;IAAA,QAC7B,eACF,QAAC,QAAQ;MAAC,QAAQ,EAAEV;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QACnC;AAEV,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,GAjFML,GAAG;AAAA,KAAHA,GAAG;AAmFT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}